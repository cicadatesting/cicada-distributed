apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicada-distributed-redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cicada-distributed-redis-configmap
data:
  redis.conf: |
    maxmemory-policy allkeys-lru
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cicada-distributed-redis
  name: cicada-distributed-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cicada-distributed-redis
  template:
    metadata:
      labels:
        app: cicada-distributed-redis
    spec:
      containers:
      - command:
        - redis-server
        - /redis-master/redis.conf
        env:
        - name: MASTER
          value: "true"
        image: redis:6
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
      serviceAccountName: cicada-distributed-redis
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          defaultMode: 420
          items:
          - key: redis.conf
            path: redis.conf
          name: cicada-distributed-redis-configmap
        name: config
---
apiVersion: v1
kind: Service
metadata:
  name: cicada-distributed-redis
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: cicada-distributed-redis
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicada-distributed-datastore-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cicada-distributed-datastore-client
  name: cicada-distributed-datastore-client
spec:
  selector:
    matchLabels:
      app: cicada-distributed-datastore-client
  template:
    metadata:
      labels:
        app: cicada-distributed-datastore-client
    spec:
      containers:
      - env:
        - name: REDIS_ENDPOINT
          value: cicada-distributed-redis
        image: cicadatesting/cicada-distributed-datastore-client:1.2.0
        imagePullPolicy: IfNotPresent
        name: cicada-distributed-datastore-client
        ports:
        - containerPort: 8283
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      serviceAccountName: cicada-distributed-datastore-client
---
apiVersion: v1
kind: Service
metadata:
  name: cicada-distributed-datastore-client
spec:
  ports:
  - port: 8283
    protocol: TCP
    targetPort: 8283
  selector:
    app: cicada-distributed-datastore-client
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicada-distributed-container-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cicada-distributed-container-service
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - create
  - delete
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cicada-distributed-container-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cicada-distributed-container-service
subjects:
- kind: ServiceAccount
  name: cicada-distributed-container-service
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cicada-distributed-container-service
  name: cicada-distributed-container-service
spec:
  selector:
    matchLabels:
      app: cicada-distributed-container-service
  template:
    metadata:
      labels:
        app: cicada-distributed-container-service
    spec:
      containers:
      - env:
        - name: RUNNER_TYPE
          value: KUBE
        image: cicadatesting/cicada-distributed-container-service:1.2.0
        imagePullPolicy: IfNotPresent
        name: cicada-distributed-container-service
        ports:
        - containerPort: 8284
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      serviceAccountName: cicada-distributed-container-service
---
apiVersion: v1
kind: Service
metadata:
  name: cicada-distributed-container-service
spec:
  ports:
  - port: 8284
    protocol: TCP
    targetPort: 8284
  selector:
    app: cicada-distributed-container-service
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicada-distributed-job

